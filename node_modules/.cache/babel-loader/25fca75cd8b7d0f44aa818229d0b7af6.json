{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"success\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Sign In\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FormKit = _resolveComponent(\"FormKit\");\n\n  return _openBlock(), _createElementBlock(\"section\", null, [$data.completeSignIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Submitted successfully!\")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_FormKit, {\n    id: \"formSignIn\",\n    modelValue: _ctx.formDataSign,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formDataSign = $event),\n    type: \"form\",\n    \"submit-label\": \"SignIn\",\n    onSubmit: $options.SignIn\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_FormKit, {\n      name: \"email\",\n      label: \"Email address\",\n      validation: \"required|email|(500)email_exists\",\n      \"validation-messages\": {\n        email_exists: 'email adresse already used'\n      },\n      \"validation-rules\": {\n        email_exists: $setup.email_exists\n      }\n    }, null, 8\n    /* PROPS */\n    , [\"validation-rules\"]), _createVNode(_component_FormKit, {\n      type: \"text\",\n      name: \"firstname\",\n      label: \"firstname\",\n      validation: \"required\"\n    }), _createVNode(_component_FormKit, {\n      type: \"text\",\n      name: \"lastname\",\n      label: \"lastname\",\n      validation: \"required\"\n    }), _createVNode(_component_FormKit, {\n      type: \"select\",\n      name: \"university\",\n      label: \"university\",\n      placeholder: \"Select an university\",\n      options: $data.universities,\n      validation: \"required\"\n    }, null, 8\n    /* PROPS */\n    , [\"options\"]), _createVNode(_component_FormKit, {\n      type: \"select\",\n      name: \"speciality\",\n      label: \"speciality\",\n      placeholder: \"Select an speciality\",\n      options: $data.specialities,\n      validation: \"required\"\n    }, null, 8\n    /* PROPS */\n    , [\"options\"]), _createVNode(_component_FormKit, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      validation: \"required\",\n      \"validation-visibility\": \"live\"\n    }), _createVNode(_component_FormKit, {\n      type: \"password\",\n      name: \"password_confirm\",\n      label: \"Confirm password\",\n      validation: \"required|confirm\",\n      \"validation-visibility\": \"live\"\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onSubmit\"])]);\n}","map":{"version":3,"mappings":";;;AAGSA,OAAK,EAAC;;;gCAETC,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;;;;uBAJJC,oBAcU,SAdV,EAcU,IAdV,EAcU,CAZmBC,sCAA3BD,oBAAwE,KAAxE,cAA2C,yBAA3C,sCAYQ,EAXRE,aASUC,kBATV,EASU;AATDC,MAAE,EAAC,YASF;gBATwBC,iBASxB;+DATwBA,oBAAYC,OASpC;AATsCC,QAAI,EAAC,MAS3C;AATkD,oBAAa,QAS/D;AATyEC,YAAM,EAAEC;AASjF,GATV;sBACE,MAAgB,CAAhBC,UAAgB,EAChBR,aAAuMC,kBAAvM,EAAuM;AAA9LQ,UAAI,EAAC,OAAyL;AAAjLC,WAAK,EAAC,eAA2K;AAA3JC,gBAAU,EAAC,kCAAgJ;AAA5G,6BAAqB;AAAAC;AAAA,OAAuF;AAAtC,0BAAgB;AAAAA,sBAAIC;AAAJ;AAAsB,KAAvM;;AAAA,2BADgB,EAEhBb,aAAgFC,kBAAhF,EAAgF;AAAvEI,UAAI,EAAC,MAAkE;AAA3DI,UAAI,EAAC,WAAsD;AAA1CC,WAAK,EAAC,WAAoC;AAAxBC,gBAAU,EAAC;AAAa,KAAhF,CAFgB,EAGhBX,aAA8EC,kBAA9E,EAA8E;AAArEI,UAAI,EAAC,MAAgE;AAAzDI,UAAI,EAAC,UAAoD;AAAzCC,WAAK,EAAC,UAAmC;AAAxBC,gBAAU,EAAC;AAAa,KAA9E,CAHgB,EAIhBX,aAA+IC,kBAA/I,EAA+I;AAAtII,UAAI,EAAC,QAAiI;AAAxHI,UAAI,EAAC,YAAmH;AAAtGC,WAAK,EAAC,YAAgG;AAAnFI,iBAAW,EAAC,sBAAuE;AAA/CC,aAAO,EAAEhB,kBAAsC;AAAxBY,gBAAU,EAAC;AAAa,KAA/I;;AAAA,kBAJgB,EAKhBX,aAA+IC,kBAA/I,EAA+I;AAAtII,UAAI,EAAC,QAAiI;AAAxHI,UAAI,EAAC,YAAmH;AAAtGC,WAAK,EAAC,YAAgG;AAAnFI,iBAAW,EAAC,sBAAuE;AAA/CC,aAAO,EAAEhB,kBAAsC;AAAxBY,gBAAU,EAAC;AAAa,KAA/I;;AAAA,kBALgB,EAMhBX,aAA+GC,kBAA/G,EAA+G;AAAtGI,UAAI,EAAC,UAAiG;AAAtFI,UAAI,EAAC,UAAiF;AAAtEC,WAAK,EAAC,UAAgE;AAArDC,gBAAU,EAAC,UAA0C;AAA/B,+BAAsB;AAAS,KAA/G,CANgB,EAOhBX,aAAuIC,kBAAvI,EAAuI;AAA9HI,UAAI,EAAC,UAAyH;AAA9GI,UAAI,EAAC,kBAAyG;AAAtFC,WAAK,EAAC,kBAAgF;AAA7DC,gBAAU,EAAC,kBAAkD;AAA/B,+BAAsB;AAAS,KAAvI,CAPgB;;;;GADlB;;AAAA,+BAWQ,CAdV","names":["class","_createElementVNode","_createElementBlock","$data","_createVNode","_component_FormKit","id","_ctx","$event","type","onSubmit","$options","_hoisted_2","name","label","validation","email_exists","$setup","placeholder","options"],"sourceRoot":"","sources":["D:\\Achille\\3A\\Web\\FEHeroku\\src\\views\\SigninView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    \r\n    <div class=\"success\" v-if=\"completeSignIn\">Submitted successfully!</div>\r\n    <FormKit id=\"formSignIn\" v-model=\"formDataSign\" type=\"form\" submit-label=\"SignIn\" @submit=\"SignIn\">\r\n      <h2>Sign In</h2>\r\n      <FormKit name=\"email\" label=\"Email address\" validation=\"required|email|(500)email_exists\" :validation-messages=\"{ email_exists: 'email adresse already used' }\" :validation-rules=\"{ email_exists }\" />\r\n      <FormKit type=\"text\" name=\"firstname\" label=\"firstname\" validation=\"required\" />\r\n      <FormKit type=\"text\" name=\"lastname\" label=\"lastname\" validation=\"required\" />\r\n      <FormKit type=\"select\" name=\"university\" label=\"university\" placeholder=\"Select an university\" :options=\"universities\" validation=\"required\" />\r\n      <FormKit type=\"select\" name=\"speciality\" label=\"speciality\" placeholder=\"Select an speciality\" :options=\"specialities\" validation=\"required\" />\r\n      <FormKit type=\"password\" name=\"password\" label=\"Password\" validation=\"required\" validation-visibility=\"live\" />\r\n      <FormKit type=\"password\" name=\"password_confirm\" label=\"Confirm password\" validation=\"required|confirm\" validation-visibility=\"live\" />\r\n    </FormKit>\r\n        \r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\n\r\nconst email_exists = async function ({ value }) {\r\n    let rep = [];\r\n    await axios.get('https://projetwebapi.herokuapp.com/api/studentemail').then((response) => {\r\n      rep = response.data;\r\n    });\r\n    for (let elt of rep) {\r\n      if(value == elt.email) {\r\n        return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != elt.email), 10)\r\n      })\r\n      }\r\n    }\r\n    return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != \"\"),10)\r\n    })\r\n    \r\n}\r\n</script>\r\n\r\n<script>\r\n\r\nimport router  from '../router';\r\nconst axios = require(\"axios\");\r\n\r\nexport default {\r\n  name: 'SigninView',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n        completeSignIn:false,\r\n        specialities : \"\",\r\n        universities : \"\",\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    SignIn() {\r\n        //router.push('/test');\r\n        // router.go();\r\n        axios.post(this.$store.state.URLAPI+'/createStudent',{\r\n          \"email\":this.formDataSign.email,\r\n          \"firstname\":this.formDataSign.firstname,\r\n          \"lastname\":this.formDataSign.lastname,\r\n          \"university\":this.formDataSign.university,\r\n          \"speciality\":this.formDataSign.speciality,\r\n          \"password\":this.formDataSign.password\r\n        }).then(() => {\r\n          this.completeSignIn =true;\r\n          router.push('/LoginView');\r\n        })\r\n    }\r\n  },\r\n\r\n  beforeCreate() {\r\n    axios.get(this.$store.state.URLAPI+'/university').then(response => this.universities = (response.data));\r\n    axios.get(this.$store.state.URLAPI+'/speciality').then(response => this.specialities = (response.data));\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\nsection {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-flow: column wrap;\r\n  font-family: 'Montserrat';\r\n\r\n}\r\n\r\nsection #formSignIn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  flex-flow: wrap column;\r\n  width:500px;\r\n  border: solid 1px #dadce0;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nsection form h2{\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 2.25rem;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nform>div>div .formkit-label {\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 22px;\r\n  line-height: 1.2;\r\n  color:black;\r\n}\r\n\r\nsection #formSignIn>div {\r\n  padding:0px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-flow: column wrap;\r\n  height: 120px;\r\n}\r\n\r\n\r\nsection #formSignIn>div:last-child{\r\n  height:100px;\r\n}\r\n\r\nsection #formSignIn>div:last-child div  {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nsection #formSignIn>div:last-child div div {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nsection #formSignIn>div:last-child div div button {\r\n  width: 180px;\r\n  margin:0px;\r\n  border: solid 1px #1b46c2;\r\n  background-color:#1b46c2;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\nsection #formSignIn>div>div{\r\n  width: 460px;\r\n  margin: 0px;\r\n}\r\n\r\nsection #formSignIn>div>div>div{\r\n  \r\n  margin: 0px;\r\n\r\n}\r\n\r\nsection #formSignIn>div>div>div>input{\r\n  width: 100%;\r\n  margin: 0px;\r\n  border:solid 1px #dadce0;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}