{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport HomeView from '@/views/HomeView.vue';\nimport AvisView from '@/views/AvisView.vue';\nimport LoginView from '@/views/LoginView.vue';\nimport AccountView from '@/views/AccountView.vue';\nimport SearchView from '@/views/SearchView.vue';\nimport SigninView from '@/views/SigninView.vue';\nimport PublishView from '@/views/PublishView.vue';\nimport ModifyAvis from '@/views/ModifyAvis.vue';\nimport AboutView from '@/views/AboutView.vue';\nconst routes = [{\n  path: '/ModifyAvis/:id',\n  name: 'ModifyAvis',\n  component: ModifyAvis\n}, {\n  path: '/SigninView',\n  name: 'SigninView',\n  component: SigninView\n}, {\n  path: '/PublishView',\n  name: 'PublishView',\n  component: PublishView\n}, {\n  path: '/AvisView/:id',\n  name: 'AvisView',\n  component: AvisView\n}, {\n  path: '/',\n  name: 'HomeView',\n  component: HomeView\n}, {\n  path: '/LoginView',\n  name: 'LoginView',\n  component: LoginView\n}, {\n  path: '/AccountView',\n  name: 'AccountView',\n  component: AccountView\n}, {\n  path: '/SearchView',\n  name: 'SearchView',\n  component: SearchView\n}, {\n  path: '/about',\n  name: 'about',\n  component: AboutView\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nexport default router;\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const privatePages = ['/AccountView', '/PublishView', '/ModifyAvis/:id'];\n  const authRequired = privatePages.includes(to.path);\n  const loggedIn = sessionStorage.getItem('userId') && sessionStorage.getItem('token');\n\n  if (authRequired && !loggedIn) {\n    return next('/LoginView');\n  }\n\n  next();\n});","map":{"version":3,"sources":["D:/Achille/3A/Web/FEHeroku/src/router/index.js"],"names":["createRouter","createWebHashHistory","HomeView","AvisView","LoginView","AccountView","SearchView","SigninView","PublishView","ModifyAvis","AboutView","routes","path","name","component","router","history","beforeEach","to","from","next","privatePages","authRequired","includes","loggedIn","sessionStorage","getItem"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,iBADR;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CADa,EAMb;AACEG,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,SAAS,EAAEP;AAHb,CANa,EAWb;AACEK,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,SAAS,EAAEN;AAHb,CAXa,EAgBb;AACEI,EAAAA,IAAI,EAAE,eADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAEX;AAHb,CAhBa,EAqBb;AACES,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAEZ;AAHb,CArBa,EA0Bb;AACEU,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAEV;AAHb,CA1Ba,EA+Bb;AACEQ,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,SAAS,EAAET;AAHb,CA/Ba,EAoCb;AACEO,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,SAAS,EAAER;AAHb,CApCa,EAyCb;AACEM,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAACJ;AAHZ,CAzCa,CAAf;AAgDA,MAAMK,MAAM,GAAGf,YAAY,CAAC;AAC1BgB,EAAAA,OAAO,EAAEf,oBAAoB,EADH;AAE1BU,EAAAA;AAF0B,CAAD,CAA3B;AAKA,eAAeI,MAAf;AAEAA,MAAM,CAACE,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;AACpC;AACA,QAAMC,YAAY,GAAG,CAAC,cAAD,EAAgB,cAAhB,EAA+B,iBAA/B,CAArB;AACA,QAAMC,YAAY,GAAGD,YAAY,CAACE,QAAb,CAAsBL,EAAE,CAACN,IAAzB,CAArB;AACA,QAAMY,QAAQ,GAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,KAAoCD,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAtD;;AAEA,MAAIJ,YAAY,IAAI,CAACE,QAArB,EAA+B;AAC7B,WAAOJ,IAAI,CAAC,YAAD,CAAX;AACD;;AAEDA,EAAAA,IAAI;AACL,CAXD","sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\r\nimport HomeView from '@/views/HomeView.vue'\r\nimport AvisView from '@/views/AvisView.vue'\r\nimport LoginView from '@/views/LoginView.vue'\r\nimport AccountView from '@/views/AccountView.vue'\r\nimport SearchView from '@/views/SearchView.vue'\r\nimport SigninView from '@/views/SigninView.vue'\r\nimport PublishView from '@/views/PublishView.vue'\r\nimport ModifyAvis from '@/views/ModifyAvis.vue'\r\nimport AboutView from '@/views/AboutView.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/ModifyAvis/:id',\r\n    name: 'ModifyAvis',\r\n    component: ModifyAvis\r\n  },\r\n  {\r\n    path: '/SigninView',\r\n    name: 'SigninView',\r\n    component: SigninView\r\n  },\r\n  {\r\n    path: '/PublishView',\r\n    name: 'PublishView',\r\n    component: PublishView\r\n  },\r\n  {\r\n    path: '/AvisView/:id',\r\n    name: 'AvisView',\r\n    component: AvisView\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'HomeView',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/LoginView',\r\n    name: 'LoginView',\r\n    component: LoginView\r\n  },\r\n  {\r\n    path: '/AccountView',\r\n    name: 'AccountView',\r\n    component: AccountView\r\n  },\r\n  {\r\n    path: '/SearchView',\r\n    name: 'SearchView',\r\n    component: SearchView\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'about',\r\n    component:AboutView\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\nexport default router;\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // redirect to login page if not logged in and trying to access a restricted page\r\n  const privatePages = ['/AccountView','/PublishView','/ModifyAvis/:id'];\r\n  const authRequired = privatePages.includes(to.path);\r\n  const loggedIn = (sessionStorage.getItem('userId') && sessionStorage.getItem('token'));\r\n\r\n  if (authRequired && !loggedIn) {\r\n    return next('/LoginView');\r\n  }\r\n\r\n  next();\r\n})"]},"metadata":{},"sourceType":"module"}