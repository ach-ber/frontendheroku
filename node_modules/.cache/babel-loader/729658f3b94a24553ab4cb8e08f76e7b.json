{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1);\n\nconst _hoisted_2 = {\n  key: 0,\n  class: \"formkit-messages\",\n  \"aria-live\": \"assertive\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", {\n  class: \"formkit-message\",\n  \"data-message-type\": \"ui\"\n}, \" Mot de passe ou adresse email incorrect ! \", -1);\n\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FormKit = _resolveComponent(\"FormKit\");\n\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_FormKit, {\n    modelValue: $data.formData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData = $event),\n    id: \"formLogin\",\n    type: \"form\",\n    \"submit-label\": \"Login\",\n    onSubmit: $options.login\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createVNode(_component_FormKit, {\n      name: \"email\",\n      label: \"Email address\",\n      validation: \"required|email\"\n    }), _createVNode(_component_FormKit, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      validation: \"required\"\n    }), $data.errorLogin ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, _hoisted_4)) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"modelValue\", \"onSubmit\"])]);\n}","map":{"version":3,"mappings":";;gCAGMA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS,EAAT;;;;AAGsBC,OAAK,EAAC;AAAmB,eAAU;;;gCACvDD,oBAEK,IAFL,EAEK;AAFDC,OAAK,EAAC,iBAEL;AAFuB,uBAAkB;AAEzC,CAFL,EAAmD,6CAAnD,EAEA,EAFA;;oBAAAC;;;;uBANNC,oBAYU,SAZV,EAYU,IAZV,EAYU,CAXRC,aASUC,kBATV,EASU;gBATQC,cASR;+DATQA,iBAAQC,OAShB;AATkBC,MAAE,EAAC,WASrB;AATiCC,QAAI,EAAC,MAStC;AAT6C,oBAAa,OAS1D;AATmEC,YAAM,EAAEC;AAS3E,GATV;sBACE,MAAc,CAAdC,UAAc,EACdR,aAA0EC,kBAA1E,EAA0E;AAAjEQ,UAAI,EAAC,OAA4D;AAApDC,WAAK,EAAC,eAA8C;AAA9BC,gBAAU,EAAC;AAAmB,KAA1E,CADc,EAEdX,aAAkFC,kBAAlF,EAAkF;AAAzEI,UAAI,EAAC,UAAoE;AAAzDI,UAAI,EAAC,UAAoD;AAAzCC,WAAK,EAAC,UAAmC;AAAxBC,gBAAU,EAAC;AAAa,KAAlF,CAFc,EAGJT,kCAAVH,oBAIK,IAJL,cAIKa,UAJL,kCAHc;;GADhB,gCAWQ,CAZV","names":["_createElementVNode","class","_hoisted_3","_createElementBlock","_createVNode","_component_FormKit","$data","$event","id","type","onSubmit","$options","_hoisted_1","name","label","validation","_hoisted_4"],"sourceRoot":"","sources":["D:\\Achille\\3A\\Web\\FEHeroku\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <FormKit v-model=\"formData\" id=\"formLogin\" type=\"form\" submit-label=\"Login\" @submit=\"login\">\r\n      <h2>Login</h2>\r\n      <FormKit name=\"email\" label=\"Email address\" validation=\"required|email\" />\r\n      <FormKit type=\"password\" name=\"password\" label=\"Password\" validation=\"required\" />\r\n      <ul v-if=\"errorLogin\" class=\"formkit-messages\" aria-live=\"assertive\">\r\n        <li class=\"formkit-message\" data-message-type=\"ui\">\r\n          Mot de passe ou adresse email incorrect !\r\n        </li>\r\n      </ul>\r\n    </FormKit>\r\n        \r\n  </section>\r\n</template>\r\n\r\n<script>\r\n\r\nimport router  from '../router';\r\nconst axios = require(\"axios\");\r\n\r\nexport default {\r\n  name: 'LoginViewbis',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      email:'pierre.martin@gmail.com',\r\n      password:'erhgherghergerh',\r\n      envoie:\"pas envoyé\",\r\n      formData:\"\",\r\n      valuetest:\"jazfjzaf@gmail.com\",\r\n      errorLogin:false,\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n        axios.post(this.$store.state.URLAPI+'/login',\r\n        {\r\n            \"email\":this.formData.email.toString(),\r\n            \"password\":this.formData.password.toString()\r\n        }\r\n        ).then((response) => {\r\n            sessionStorage.setItem('token',response.data.token);\r\n            sessionStorage.setItem('userId',response.data.userId);\r\n            this.$store.state.ID = response.data.userId;\r\n            this.$store.state.isConnected = \"Connecté !\";\r\n            router.push('/AccountView');\r\n        }).catch(() => {\r\n          this.errorLogin = true;\r\n        })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\nsection {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-flow: column wrap;\r\n  font-family: 'Montserrat';\r\n}\r\n\r\nsection #formLogin {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  flex-flow: wrap column;\r\n  width:500px;\r\n  border: solid 1px #dadce0;\r\n  margin-top: 40px;\r\n}\r\n\r\nsection form h2{\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 2.25rem;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nform>div>div .formkit-label {\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 22px;\r\n  line-height: 1.2;\r\n  color:black;\r\n}\r\n\r\nsection #formLogin>div {\r\n  padding:0px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-flow: column wrap;\r\n  height: 120px;\r\n}\r\n\r\nsection #formLogin>div:last-child div  {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nsection #formLogin>div:last-child div div {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nsection #formLogin>div:last-child div div button,section #formside form>div div div button{\r\n  width: 180px;\r\n  margin:0px;\r\n  border: solid 1px #1b46c2;\r\n  background-color:#1b46c2;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\n\r\nsection #formLogin>div>div{\r\n  width: 460px;\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}