{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"success\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"success\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Publish\", -1);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"formkit-label\"\n}, \"Don't find yours ?\", -1);\n\nconst _hoisted_5 = {\n  key: 3,\n  id: \"formside\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add a company\", -1);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Back to Publish\", -1);\n\nimport router from '../router';\n\nconst axios = require(\"axios\");\n\nconst __default__ = {\n  name: 'PublishView',\n  components: {},\n\n  data() {\n    return {\n      publishside: true,\n      completePublish: false,\n      completeCompany: false,\n      companies: [],\n      company: []\n    };\n  },\n\n  methods: {\n    publishfunc() {\n      this.publishside = true;\n      this.completeCompany = false;\n    },\n\n    Publish() {\n      axios.post(this.$store.state.URLAPI + '/createavis', {\n        \"avis\": this.formDataAvis.avis.toString(),\n        \"date\": this.formDataAvis.date.toString(),\n        \"ids\": this.$store.state.ID,\n        \"idc\": this.formDataAvis.company.toString(),\n        \"note\": this.formDataAvis.note,\n        \"title\": this.formDataAvis.title.toString()\n      }, {\n        headers: {\n          'Authorization': `Basic ${sessionStorage.getItem('token')}`\n        }\n      }).then(() => {\n        this.completePublish = true;\n        this.$formkit.reset('formPublish');\n        router.push('/AccountView');\n      });\n    },\n\n    Add() {\n      axios.post(this.$store.state.URLAPI + '/createcompany', this.formDataCompany, {\n        headers: {\n          'Authorization': `Basic ${sessionStorage.getItem('token')}`\n        }\n      }).then(() => {\n        axios.get(this.$store.state.URLAPI + '/company').then(response => this.companies = response.data);\n        this.completeCompany = true;\n        this.$formkit.reset('formcompany');\n        this.publishside = true;\n      });\n    }\n\n  },\n\n  beforeCreate() {\n    axios.get(this.$store.state.URLAPI + '/company').then(response => this.companies = response.data);\n  }\n\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props) {\n    const company_exists = async function ({\n      value\n    }) {\n      let rep = [];\n      await axios.get('https://projetwebapi.herokuapp.com/api/company').then(response => {\n        rep = response.data;\n      });\n\n      for (let elt of rep) {\n        if (value == elt.label) {\n          return new Promise(resolve => {\n            setTimeout(() => resolve(value != elt.label), 1);\n          });\n        }\n      }\n\n      return new Promise(resolve => {\n        setTimeout(() => resolve(value != \"\"), 1);\n      });\n    };\n\n    return (_ctx, _cache) => {\n      const _component_FormKit = _resolveComponent(\"FormKit\");\n\n      return _openBlock(), _createElementBlock(\"section\", null, [_ctx.completePublish ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Submitted successfully!\")) : _createCommentVNode(\"\", true), _ctx.completeCompany ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Submitted successfully!\")) : _createCommentVNode(\"\", true), _ctx.publishside ? (_openBlock(), _createBlock(_component_FormKit, {\n        key: 2,\n        modelValue: _ctx.formDataAvis,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formDataAvis = $event),\n        type: \"form\",\n        id: \"formPublish\",\n        \"submit-label\": \"Publish\",\n        onSubmit: _ctx.Publish\n      }, {\n        default: _withCtx(() => [_hoisted_3, _createVNode(_component_FormKit, {\n          type: \"text\",\n          name: \"title\",\n          label: \"title\",\n          validation: \"required|length:5,30\",\n          \"validation-visibility\": \"live\"\n        }), _createVNode(_component_FormKit, {\n          type: \"textarea\",\n          name: \"avis\",\n          label: \"DÃ©crivez votre stage !\",\n          validation: \"required\"\n        }), _createVNode(_component_FormKit, {\n          type: \"range\",\n          name: \"note\",\n          label: \"note\",\n          min: \"0\",\n          max: \"10\"\n        }), _createVNode(_component_FormKit, {\n          type: \"date\",\n          name: \"date\",\n          label: \"date\",\n          validation: \"required\"\n        }), _createVNode(_component_FormKit, {\n          type: \"select\",\n          name: \"company\",\n          label: \"Company\",\n          placeholder: \"Select a company\",\n          options: _ctx.companies,\n          validation: \"required\"\n        }, null, 8, [\"options\"]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_4, _ctx.publishside ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"formkit-input\",\n          onClick: _cache[0] || (_cache[0] = $event => (_ctx.publishside = false, _ctx.completePublish = false))\n        }, \"ADD A COMPANY\")) : _createCommentVNode(\"\", true)])])]),\n        _: 1\n      }, 8, [\"modelValue\", \"onSubmit\"])) : _createCommentVNode(\"\", true), !_ctx.publishside ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [!_ctx.publishside ? (_openBlock(), _createBlock(_component_FormKit, {\n        key: 0,\n        modelValue: _ctx.formDataCompany,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.formDataCompany = $event),\n        type: \"form\",\n        id: \"formcompany\",\n        \"submit-label\": \"ADD\",\n        onSubmit: _ctx.Add\n      }, {\n        default: _withCtx(() => [_hoisted_6, _createVNode(_component_FormKit, {\n          type: \"text\",\n          name: \"name\",\n          label: \"name\",\n          validation: \"required|(500)company_exists\",\n          \"validation-messages\": {\n            company_exists: 'company already exists'\n          },\n          \"validation-rules\": {\n            company_exists: company_exists\n          }\n        }, null, 8, [\"validation-rules\"])]),\n        _: 1\n      }, 8, [\"modelValue\", \"onSubmit\"])) : _createCommentVNode(\"\", true), _hoisted_7, _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = (...args) => _ctx.publishfunc && _ctx.publishfunc(...args))\n      }, \"BACK\")])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["router","axios","require","name","components","data","publishside","completePublish","completeCompany","companies","company","methods","publishfunc","Publish","post","$store","state","URLAPI","formDataAvis","avis","toString","date","ID","note","title","headers","sessionStorage","getItem","then","$formkit","reset","push","Add","formDataCompany","get","response","beforeCreate","company_exists","value","rep","elt","label","Promise","resolve","setTimeout"],"sources":["D:/Achille/3A/Web/FEHeroku/src/views/PublishView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"success\" v-if=\"completePublish\">Submitted successfully!</div>\r\n    <div class=\"success\" v-if=\"completeCompany\">Submitted successfully!</div>\r\n    <FormKit v-model=\"formDataAvis\" type=\"form\" id=\"formPublish\" submit-label=\"Publish\" @submit=\"Publish\" v-if=\"publishside\">\r\n        <h2>Publish</h2>\r\n        <FormKit type=\"text\" name=\"title\" label=\"title\" validation=\"required|length:5,30\" validation-visibility=\"live\"/>\r\n        <FormKit type=\"textarea\" name=\"avis\" label=\"DÃ©crivez votre stage !\" validation=\"required\" />\r\n        <FormKit type=\"range\"  name=\"note\" label=\"note\" min=\"0\" max=\"10\" />\r\n        <FormKit type=\"date\"  name=\"date\" label=\"date\" validation=\"required\"/>\r\n        <FormKit type=\"select\" name=\"company\" label=\"Company\" placeholder=\"Select a company\" :options=\"companies\" validation=\"required\" />\r\n        <div>\r\n          <div>\r\n            <label class=\"formkit-label\">Don't find yours ?</label>\r\n            <button class=\"formkit-input\" v-on:click=\"publishside = false, completePublish=false\" v-if=\"publishside\">ADD A COMPANY</button>\r\n          </div>\r\n        </div>\r\n        \r\n    </FormKit>\r\n    <div id=\"formside\" v-if=\"!publishside\">\r\n    <FormKit v-model=\"formDataCompany\" type=\"form\" id=\"formcompany\" submit-label=\"ADD\" @submit=\"Add\" v-if=\"!publishside\" >\r\n        <h2>Add a company</h2>\r\n        <FormKit type=\"text\" name=\"name\" label=\"name\" validation=\"required|(500)company_exists\" :validation-messages=\"{ company_exists: 'company already exists' }\" :validation-rules=\"{ company_exists }\" />\r\n    </FormKit>\r\n    <h2>Back to Publish</h2>\r\n    <button v-on:click=\"publishfunc\" >BACK</button>\r\n    </div>\r\n    \r\n    \r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\n\r\nconst company_exists = async function ({ value }) {\r\n    let rep = [];\r\n    await axios.get('https://projetwebapi.herokuapp.com/api/company').then((response) => {\r\n      rep = response.data;\r\n    });\r\n    for (let elt of rep) {\r\n      if(value == elt.label) {\r\n        return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != elt.label), 1)\r\n      })\r\n      }\r\n    }\r\n    return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != \"\"),1)\r\n    })\r\n    \r\n}\r\n</script>\r\n\r\n<script>\r\n\r\nimport router  from '../router';\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default {\r\n  name: 'PublishView',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n        publishside:true,\r\n        completePublish:false,\r\n        completeCompany:false,\r\n        companies:[],\r\n        company: [],\r\n        \r\n    }\r\n  },\r\n  methods: {\r\n    publishfunc() {\r\n        this.publishside = true;\r\n        this.completeCompany=false;\r\n    },\r\n\r\n    Publish() {\r\n      \r\n        axios.post(this.$store.state.URLAPI+'/createavis',\r\n        {\r\n            \"avis\":this.formDataAvis.avis.toString(),\r\n            \"date\":this.formDataAvis.date.toString(),\r\n            \"ids\":this.$store.state.ID,\r\n            \"idc\":this.formDataAvis.company.toString(),\r\n            \"note\":this.formDataAvis.note,\r\n            \"title\":this.formDataAvis.title.toString()\r\n        },{\r\n          headers: {\r\n            'Authorization': `Basic ${sessionStorage.getItem('token')}` \r\n          }\r\n        }).then(() => {\r\n          this.completePublish = true;\r\n          this.$formkit.reset('formPublish');\r\n          router.push('/AccountView');\r\n        })\r\n        \r\n        \r\n    },\r\n    Add() {\r\n        axios.post(this.$store.state.URLAPI+'/createcompany',this.formDataCompany,\r\n        {\r\n          headers: {\r\n            'Authorization': `Basic ${sessionStorage.getItem('token')}` \r\n          }\r\n        }).then(() => {\r\n          axios.get(this.$store.state.URLAPI+'/company').then(response => this.companies = (response.data));\r\n          this.completeCompany = true;\r\n          this.$formkit.reset('formcompany');\r\n          this.publishside = true;\r\n        })\r\n        \r\n    }\r\n  },\r\n  beforeCreate() {\r\n    axios.get(this.$store.state.URLAPI+'/company').then(response => this.companies = (response.data))\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n\r\nsection #formPublish{\r\n  margin: 20px 0px 40px 0px;\r\n  width: 80%;\r\n  min-width: 800px;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  flex-flow: wrap row;\r\n  border: solid 1px #dadce0;\r\n  padding-bottom: 40px;\r\n}\r\n\r\nsection #formPublish{\r\n  justify-content: center;\r\n}\r\n\r\nform>div>div .formkit-label {\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 22px;\r\n  line-height: 1.2;\r\n  color:black;\r\n}\r\n\r\nsection #formPublish>div {\r\n  padding:0px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-flow: column wrap;\r\n  width: 80%;\r\n  margin:  20px 10% 0px 10%;\r\n  height: 120px;\r\n}\r\n\r\n\r\n\r\nsection #formPublish>div:nth-child(3) {\r\n  height: 200px;\r\n}\r\n\r\nsection #formPublish>div>div {\r\n  width: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\nsection #formPublish>div:nth-child(4), section #formPublish>div:nth-child(5),section #formPublish>div:nth-child(6),section #formPublish>div:nth-child(7)  {\r\n  width: 30%;\r\n}\r\n\r\nsection #formPublish>div:nth-child(4) div div input {\r\n  border:none;\r\n}\r\n\r\nsection #formPublish>div:nth-child(7)>div>button{\r\n border: solid 1px #1b46c2;\r\n color:#1b46c2;\r\n}\r\n\r\nsection #formPublish>div:nth-child(7)>div>button:hover {\r\n  cursor: pointer;\r\n  background-color: #1b46c2;\r\n  color: white;\r\n}\r\n\r\nsection #formPublish>div:nth-child(7) button{\r\n  background-color: white;\r\n \r\n}\r\n\r\nsection #formPublish>div:last-child, section #formside form>div:nth-child(4) {\r\n   height: 60px;\r\n   margin-top: 40px;\r\n}\r\n\r\nsection #formPublish>div:last-child div  {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nsection #formPublish>div:last-child div div {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nsection #formPublish>div:last-child div div button,section #formside form>div div div button{\r\n  width: 180px;\r\n  margin:0px;\r\n  border: solid 1px #1b46c2;\r\n  background-color:#1b46c2;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\nsection #formPublish>div>div{\r\n  margin: 0px;\r\n}\r\n\r\nsection #formPublish>div>div>div{\r\n  margin: 0px;\r\n\r\n}\r\n\r\nsection #formPublish>div>div>div>input {\r\n  margin: 0px;\r\n  border:solid 1px #dadce0;\r\n}\r\n\r\n/* ------------------------------------------- form company ------------------------------------------- */\r\n\r\nsection #formside {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  flex-flow: wrap column;\r\n  width:500px;\r\n  border: solid 1px #dadce0;\r\n  margin-top: 20px;\r\n  padding-bottom: 40px;\r\n}\r\n\r\nsection #formside h2{\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 2.25rem;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nsection #formside form>div {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-flow: column wrap;\r\n  height: 110px;\r\n}\r\n\r\nsection #formside form>div:last-child {\r\n  height: 60px;\r\n}\r\n\r\nsection #formside form>div:last-child div div {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\nsection #formside>button{\r\n  width: 180px;\r\n  margin:0px;\r\n  border: solid 1px #1b46c2;\r\n  background-color: white;\r\n  font-weight: 600;\r\n  height: 48px;\r\n  font-size: 16px;\r\n  font-family: 'Montserrat';\r\n  color:#1b46c2;\r\n  border-radius:4px;\r\n}\r\n\r\nsection #formside button:hover {\r\n  background-color: #1b46c2;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}