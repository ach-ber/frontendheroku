{"ast":null,"code":"import router from '../router';\n\nconst axios = require(\"axios\");\n\nconst __default__ = {\n  name: 'SigninViewBis',\n  components: {},\n\n  data() {\n    return {\n      completeSignIn: false,\n      specialities: \"\",\n      universities: \"\",\n      formData: \"\"\n    };\n  },\n\n  methods: {\n    SignIn() {\n      //router.push('/test');\n      axios.post(this.$store.state.URLAPI + '/createStudent', {\n        \"email\": this.formData.email.toString(),\n        \"firstname\": this.formData.firstname.toString(),\n        \"lastname\": this.formData.lastname.toString(),\n        \"university\": this.formData.university,\n        \"speciality\": this.formData.speciality,\n        \"password\": this.formData.password.toString()\n      }).then(() => {\n        this.completeSignIn = true;\n        router.go();\n      });\n    }\n\n  },\n\n  beforeCreate() {\n    axios.get(this.$store.state.URLAPI + '/university').then(response => this.universities = response.data);\n    axios.get(this.$store.state.URLAPI + '/speciality').then(response => this.specialities = response.data);\n    this.formData = \"\";\n  }\n\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    const email_exists = async function ({\n      value\n    }) {\n      let rep = [];\n      await axios.get('https://projetwebapi.herokuapp.com/api/studentemail').then(response => {\n        rep = response.data;\n      });\n\n      for (let elt of rep) {\n        if (value == elt.email) {\n          return new Promise(resolve => {\n            setTimeout(() => resolve(value != elt.email), 10);\n          });\n        }\n      }\n\n      return new Promise(resolve => {\n        setTimeout(() => resolve(value != \"\"), 10);\n      });\n    };\n\n    const __returned__ = {\n      axios,\n      email_exists,\n      router\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AAyCA,OAAOA,MAAP,MAAoB,WAApB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,oBAAe;AACbC,MAAI,EAAE,eADO;AAEbC,YAAU,EAAE,EAFC;;AAKbC,MAAI,GAAG;AACL,WAAO;AACHC,oBAAc,EAAC,KADZ;AAEHC,kBAAY,EAAG,EAFZ;AAGHC,kBAAY,EAAG,EAHZ;AAIHC,cAAQ,EAAG;AAJR,KAAP;AAMD,GAZY;;AAabC,SAAO,EAAE;AAEPC,UAAM,GAAG;AACL;AACAV,WAAK,CAACW,IAAN,CAAW,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAAyB,gBAApC,EAAqD;AACnD,iBAAQ,KAAKN,QAAL,CAAcO,KAAd,CAAoBC,QAApB,EAD2C;AAEnD,qBAAY,KAAKR,QAAL,CAAcS,SAAd,CAAwBD,QAAxB,EAFuC;AAGnD,oBAAW,KAAKR,QAAL,CAAcU,QAAd,CAAuBF,QAAvB,EAHwC;AAInD,sBAAa,KAAKR,QAAL,CAAcW,UAJwB;AAKnD,sBAAa,KAAKX,QAAL,CAAcY,UALwB;AAMnD,oBAAW,KAAKZ,QAAL,CAAca,QAAd,CAAuBL,QAAvB;AANwC,OAArD,EAOGM,IAPH,CAOQ,MAAM;AACZ,aAAKjB,cAAL,GAAqB,IAArB;AACAN,cAAM,CAACwB,EAAP;AACD,OAVD;AAWH;;AAfM,GAbI;;AA+BbC,cAAY,GAAG;AACbxB,SAAK,CAACyB,GAAN,CAAU,KAAKb,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAAyB,aAAnC,EAAkDQ,IAAlD,CAAuDI,QAAQ,IAAI,KAAKnB,YAAL,GAAqBmB,QAAQ,CAACtB,IAAjG;AACAJ,SAAK,CAACyB,GAAN,CAAU,KAAKb,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAAyB,aAAnC,EAAkDQ,IAAlD,CAAuDI,QAAQ,IAAI,KAAKpB,YAAL,GAAqBoB,QAAQ,CAACtB,IAAjG;AACA,SAAKI,QAAL,GAAc,EAAd;AACD;;AAnCY,CAAf;;;;;;;AAxBA,UAAMmB,YAAY,GAAG,gBAAgB;AAAEC;AAAF,KAAhB,EAA2B;AAC5C,UAAIC,GAAG,GAAG,EAAV;AACA,YAAM7B,KAAK,CAACyB,GAAN,CAAU,qDAAV,EAAiEH,IAAjE,CAAuEI,QAAD,IAAc;AACxFG,WAAG,GAAGH,QAAQ,CAACtB,IAAf;AACD,OAFK,CAAN;;AAGA,WAAK,IAAI0B,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,YAAGD,KAAK,IAAIE,GAAG,CAACf,KAAhB,EAAuB;AACrB,iBAAO,IAAIgB,OAAJ,CAAaC,OAAD,IAAa;AAClCC,sBAAU,CAAC,MAAMD,OAAO,CAACJ,KAAK,IAAIE,GAAG,CAACf,KAAd,CAAd,EAAoC,EAApC,CAAV;AACC,WAFQ,CAAP;AAGD;AACF;;AACD,aAAO,IAAIgB,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,kBAAU,CAAC,MAAMD,OAAO,CAACJ,KAAK,IAAI,EAAV,CAAd,EAA4B,EAA5B,CAAV;AACD,OAFM,CAAP;AAIH,KAhBD","names":["router","axios","require","name","components","data","completeSignIn","specialities","universities","formData","methods","SignIn","post","$store","state","URLAPI","email","toString","firstname","lastname","university","speciality","password","then","go","beforeCreate","get","response","email_exists","value","rep","elt","Promise","resolve","setTimeout"],"sources":["D:/Achille/3A/Web/FEHeroku/src/views/SigninView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    \r\n    <div class=\"success\" v-if=\"completeSignIn\">Submitted successfully!</div>\r\n    <FormKit id=\"formSignIn\" v-model=\"formData\" type=\"form\" submit-label=\"SignIn\" @submit=\"SignIn\">\r\n      <h2>Sign In</h2>\r\n      <FormKit name=\"email\" label=\"Email address\" validation=\"required|email|(500)email_exists\" :validation-messages=\"{ email_exists: 'email adresse already used' }\" :validation-rules=\"{ email_exists }\" />\r\n      <FormKit type=\"text\" name=\"firstname\" label=\"firstname\" validation=\"required\" />\r\n      <FormKit type=\"text\" name=\"lastname\" label=\"lastname\" validation=\"required\" />\r\n      <FormKit type=\"select\" name=\"university\" label=\"university\" placeholder=\"Select an university\" :options=\"universities\" validation=\"required\" />\r\n      <FormKit type=\"select\" name=\"speciality\" label=\"speciality\" placeholder=\"Select an speciality\" :options=\"specialities\" validation=\"required\" />\r\n      <FormKit type=\"password\" name=\"password\" label=\"Password\" validation=\"required\" validation-visibility=\"live\" />\r\n      <FormKit type=\"password\" name=\"password_confirm\" label=\"Confirm password\" validation=\"required|confirm\" validation-visibility=\"live\" />\r\n    </FormKit>\r\n        \r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\n\r\nconst email_exists = async function ({ value }) {\r\n    let rep = [];\r\n    await axios.get('https://projetwebapi.herokuapp.com/api/studentemail').then((response) => {\r\n      rep = response.data;\r\n    });\r\n    for (let elt of rep) {\r\n      if(value == elt.email) {\r\n        return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != elt.email), 10)\r\n      })\r\n      }\r\n    }\r\n    return new Promise((resolve) => { \r\n      setTimeout(() => resolve(value != \"\"),10)\r\n    })\r\n    \r\n}\r\n</script>\r\n\r\n<script>\r\n\r\nimport router  from '../router';\r\nconst axios = require(\"axios\");\r\n\r\nexport default {\r\n  name: 'SigninViewBis',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n        completeSignIn:false,\r\n        specialities : \"\",\r\n        universities : \"\",\r\n        formData : \"\",\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    SignIn() {\r\n        //router.push('/test');\r\n        axios.post(this.$store.state.URLAPI+'/createStudent',{\r\n          \"email\":this.formData.email.toString(),\r\n          \"firstname\":this.formData.firstname.toString(),\r\n          \"lastname\":this.formData.lastname.toString(),\r\n          \"university\":this.formData.university,\r\n          \"speciality\":this.formData.speciality,\r\n          \"password\":this.formData.password.toString()\r\n        }).then(() => {\r\n          this.completeSignIn =true;\r\n          router.go();\r\n        })\r\n    }\r\n  },\r\n\r\n  beforeCreate() {\r\n    axios.get(this.$store.state.URLAPI+'/university').then(response => this.universities = (response.data));\r\n    axios.get(this.$store.state.URLAPI+'/speciality').then(response => this.specialities = (response.data));\r\n    this.formData=\"\";\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\nsection {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-flow: column wrap;\r\n  font-family: 'Montserrat';\r\n\r\n}\r\n\r\nsection #formSignIn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  flex-flow: wrap column;\r\n  width:500px;\r\n  border: solid 1px #dadce0;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nsection form h2{\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 2.25rem;\r\n  margin: 40px 0px 40px 0px;\r\n}\r\n\r\nform>div>div .formkit-label {\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 22px;\r\n  line-height: 1.2;\r\n  color:black;\r\n}\r\n\r\nsection #formSignIn>div {\r\n  padding:0px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-flow: column wrap;\r\n  height: 120px;\r\n}\r\n\r\n\r\nsection #formSignIn>div:last-child{\r\n  height:100px;\r\n}\r\n\r\nsection #formSignIn>div:last-child div  {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nsection #formSignIn>div:last-child div div {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nsection #formSignIn>div:last-child div div button {\r\n  width: 180px;\r\n  margin:0px;\r\n  border: solid 1px #1b46c2;\r\n  background-color:#1b46c2;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n}\r\n\r\nsection #formSignIn>div>div{\r\n  width: 460px;\r\n  margin: 0px;\r\n}\r\n\r\nsection #formSignIn>div>div>div{\r\n  \r\n  margin: 0px;\r\n\r\n}\r\n\r\nsection #formSignIn>div>div>div>input{\r\n  width: 100%;\r\n  margin: 0px;\r\n  border:solid 1px #dadce0;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}